<?php

namespace $NAMESPACE$\Repositories\$NAME$;

use $NAMESPACE$\Entities\$NAME$;
use Modules\Admin\Repositories\Base\BaseRepository;
use Modules\Admin\Repositories\Base\Input\InputDataInterface;
use Modules\Admin\Repositories\Base\Query\QueryInterface;
use Modules\Admin\Repositories\Base\Output\OutputInterface;
use Modules\Admin\Repositories\Base\Output\ObjectOutputInterface;
use Illuminate\Database\Eloquent\Builder;

class $NAME$RepositoryEloquent extends BaseRepository implements $NAME$Repository
{

    public function query(): Builder
    {
        return $NAME$::query();
    }

    public function get$NAME$(
        QueryInterface $queryBuilder,
        OutputInterface $output
    )    {
        return $this->get(
            $queryBuilder,
            $output
        );
    }

    public function find$NAME$(QueryInterface $queryBuilder, ObjectOutputInterface $output)
        {
            return $this->find(
                $queryBuilder,
                $output
            );
        }

    public function create$NAME$(InputDataInterface $inputData)
    {
        return $this->query()->create($inputData->getData());
    }

    public function update$NAME$(InputDataInterface $inputData, QueryInterface $queryBuilder)
    {
        return $queryBuilder->buildQuery($this->query())
            ->update($inputData->getData());
    }

    public function delete$NAME$(QueryInterface $queryBuilder)
    {
        return $queryBuilder->buildQuery($this->query())->delete();
    }

    public function getEmpty$NAME$()
    {
        return new  $NAME$();
    }

    public function loadOldInput($$KEY$, \Illuminate\Http\Request $request)
            {
                $fillable = $$KEY$->getFillable();
                foreach($fillable as $field){
                    if($request->old($field)) {
                        $$KEY$->$field = $request->old($field);
                    }
                }
                return $$KEY$;
            }


}
